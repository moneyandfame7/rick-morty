/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 support_ukraine.gltf --transform --types
Author: Nyilonelycompany (https://sketchfab.com/Nyilonelycompany)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/support-ukraine-with-love-dbf3b267136c42f780416c0f2494a8b7
Title: Support Ukraine with love.
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_15: THREE.Mesh
    Object_12: THREE.SkinnedMesh
    Object_459: THREE.Mesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    Flag_Pole_Mat: THREE.MeshStandardMaterial
    Flag_Mat: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Take 001'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/support_ukraine-transformed.glb') as GLTFResult
  const { actions } = useAnimations<any>(animations, group)
  return (
    <group ref={group as any} {...props} dispose={null}>
      <group name='Sketchfab_Scene'>
        <group name='Sketchfab_model' rotation={[-Math.PI / 2, 0, 0]} scale={0.13}>
          <group name='root'>
            <group name='GLTF_SceneRootNode' rotation={[Math.PI / 2, 0, 0]}>
              <group
                name='RootNode_(gltf_orientation_matrix)_452'
                position={[1.71, 0.54, -0.05]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={0.35}
              >
                <group name='RootNode_(model_correction_matrix)_451'>
                  <group name='Flag_Polefbx_450' rotation={[Math.PI / 2, 0, 0]}>
                    <group name='Node_3_449'>
                      <group name='RootNode_448'>
                        <group name='Armature_447'>
                          <group name='GLTF_created_0'>
                            <primitive object={nodes.GLTF_created_0_rootJoint} />
                            <group name='Flag_Pole_445' scale={1.41}>
                              <group name='Flag_Pole_Flag_Pole_Mat_0_444'>
                                <mesh
                                  name='Object_15'
                                  geometry={nodes.Object_15.geometry}
                                  material={materials.Flag_Pole_Mat}
                                />
                              </group>
                            </group>
                            <skinnedMesh
                              name='Object_12'
                              geometry={nodes.Object_12.geometry}
                              material={materials.Flag_Mat}
                              skeleton={nodes.Object_12.skeleton}
                            />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
              <group name='Cube_453' position={[1.71, 0.54, -0.05]} scale={0.35}>
                <mesh name='Object_459' geometry={nodes.Object_459.geometry} material={materials['Material.001']} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/support_ukraine-transformed.glb')
